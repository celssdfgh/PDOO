/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import civitas.CivitasJuego;
import civitas.Diario;
import civitas.OperacionInmobiliaria;
import civitas.OperacionJuego;
import controladorCivitas.Respuesta;
import javax.swing.JOptionPane;

/**
 *
 * @author celiaa
 */
public class CivitasView extends javax.swing.JFrame implements Vista {
    
    private CivitasJuego juego;
    
    /**
     * Creates new form CivitasView
     */
    public CivitasView() {
        initComponents();
        
        this.setVisible(true);
        repaint();
        revalidate();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titulo = new javax.swing.JLabel();
        jugadorPanelView = new GUI.JugadorPanel();
        sOperacion = new javax.swing.JLabel();
        siguienteOperacionPanel = new javax.swing.JTextField();
        r = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        rankingPanel = new javax.swing.JTextArea();
        casillaActualPanel = new GUI.CasillaPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        titulo.setText("Civitas");

        sOperacion.setText("Siguiente operación: ");

        siguienteOperacionPanel.setEditable(false);
        siguienteOperacionPanel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                siguienteOperacionPanelActionPerformed(evt);
            }
        });

        r.setText("Ranking:");

        rankingPanel.setEditable(false);
        rankingPanel.setColumns(20);
        rankingPanel.setRows(5);
        jScrollPane1.setViewportView(rankingPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(casillaActualPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jugadorPanelView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(r))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(151, 151, 151)
                                .addComponent(titulo))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(sOperacion)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(siguienteOperacionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1265, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 146, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jugadorPanelView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sOperacion)
                    .addComponent(siguienteOperacionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(casillaActualPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(r)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(545, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void siguienteOperacionPanelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_siguienteOperacionPanelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_siguienteOperacionPanelActionPerformed

    public void setCivitasJuego(CivitasJuego j){
        juego = j;
        setVisible(true); 
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.CasillaPanel casillaActualPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private GUI.JugadorPanel jugadorPanelView;
    private javax.swing.JLabel r;
    private javax.swing.JTextArea rankingPanel;
    private javax.swing.JLabel sOperacion;
    private javax.swing.JTextField siguienteOperacionPanel;
    private javax.swing.JLabel titulo;
    // End of variables declaration//GEN-END:variables

    
    public void actualiza() {
        jugadorPanelView.setJugador(juego.getJugadorActual());
        //casillaActualPanel.setText(juego.getCasillaActual().toString());
        casillaActualPanel.setCasilla(juego.getCasillaActual());
        
        rankingPanel.setVisible(false);
        r.setVisible(false);
        
        if(juego.finalDelJuego()){
            rankingPanel.setText(juego.ranking().toString());
            rankingPanel.setVisible(true);
            r.setVisible(true);
        }
        
        repaint();
        revalidate();
    }
    

    @Override
    public void pausa() {
        int val = JOptionPane.showConfirmDialog(null, "¿Continuar?","Siguient paso", JOptionPane.YES_NO_OPTION);
        if (val == 1) System.exit(0);
    }

    @Override
    public Respuesta comprar() {
        int opcion = 1-JOptionPane.showConfirmDialog(null, "¿Quieres comprar esta propiedad?", "Compra" , JOptionPane.YES_NO_OPTION);
        System.out.println(opcion);
        return (Respuesta.values()[opcion]);
    }

    @Override
    public OperacionInmobiliaria elegirOperacion() {
        GestionarDialog gestion = new GestionarDialog(this,true);
        
        return (OperacionInmobiliaria.values()[gestion.getGestionElegida()]);
    }

    @Override
    public int elegirPropiedad() {
        PropiedadDialog propiedad = new PropiedadDialog(this,true,juego.getJugadorActual());
        
        return propiedad.getPropiedadElegida();
    }

    @Override
    public void mostrarSiguienteOperacion(OperacionJuego operacion) {
        siguienteOperacionPanel.setText(operacion.toString());
        
        if("AVANZAR".equals(operacion.toString())){
            Dado.createInstance(this);
        }
        repaint();
        revalidate();
    }

    @Override
    public void mostrarEventos() {
        if(!Diario.getInstance().getEventos().isEmpty()){
            DiarioDialog diarioD = new DiarioDialog(this); //Crea la ventana
        }
    }
}
